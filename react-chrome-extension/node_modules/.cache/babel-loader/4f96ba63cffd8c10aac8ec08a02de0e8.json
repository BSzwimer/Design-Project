{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminszwimer/Desktop/Extension/react-chrome-extension/src/Components/Modal.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { X } from \"react-feather\";\nimport Draggable from \"react-draggable\";\nimport { ModalContext } from \"../Contexts/ModalProvider\";\nconst api = \"http://127.0.0.1:5000/\";\n\nconst Modal = () => {\n  //   //this will be used to return from the backend the dictionary of image->date pairs\n  //   const [imagePairs, search]\n  // // Unique ID for the className.\n  // var MOUSE_VISITED_CLASSNAME = \"crx_mouse_visited\";\n  // // Previous dom, that we want to track, so we can remove the previous styling.\n  // var prevDOM = null;\n  // // Mouse listener for any move event on the current document.\n  // document.addEventListener(\n  //   \"mousemove\",\n  //   function (e) {\n  //     let srcElement = e.srcElement;\n  //     // Lets check if our underlying element is a IMG.\n  //     if (prevDOM != srcElement && srcElement.nodeName == \"IMG\") {\n  //       // For NPE checking, we check safely. We need to remove the class name\n  //       // Since we will be styling the new one after.\n  //       if (prevDOM != null) {\n  //         prevDOM.classList.remove(MOUSE_VISITED_CLASSNAME);\n  //       }\n  //       // Add a visited class name to the element. So we can style it.\n  //       srcElement.classList.add(MOUSE_VISITED_CLASSNAME);\n  //       // The current element is now the previous. So we can remove the class\n  //       // during the next ieration.\n  //       prevDOM = srcElement;\n  //       console.info(srcElement.currentSrc);\n  //       console.dir(srcElement);\n  //     }\n  //   },\n  //   false\n  // );\n  const getURL = () => {\n    return document.URL;\n  };\n\n  const callScript = async () => {\n    const url = getURL();\n    const response = await axios.get(\"http://127.0.0.1:5000/geturl/?page=Paper_Mario:_The_Origami_King\");\n    return response;\n  };\n\n  return React.createElement(ModalContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, ({\n    windowPosition,\n    hasDraggedWindowPosition,\n    extensionId,\n    getExtensionId\n  }) => React.createElement(Draggable, {\n    handle: \".modal-handle\",\n    defaultPosition: {\n      x: windowPosition.x,\n      y: windowPosition.y\n    },\n    position: hasDraggedWindowPosition ? {\n      x: windowPosition.x,\n      y: windowPosition.y\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"modal\",\n    className: \"modal-window\",\n    style: {\n      transform: windowPosition\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-window-inner-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-close-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(X, {\n    color: \"#5d6484\",\n    size: \"14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, extensionId), React.createElement(\"button\", {\n    onClick: () => {\n      console.log(getURL()); //console.log(callScript());\n    },\n    className: \"modal-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"RUN MINUTE MAN?\"))))))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/benjaminszwimer/Desktop/Extension/react-chrome-extension/src/Components/Modal.js"],"names":["React","useEffect","axios","X","Draggable","ModalContext","api","Modal","getURL","document","URL","callScript","url","response","get","windowPosition","hasDraggedWindowPosition","extensionId","getExtensionId","x","y","transform","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,MAAMC,GAAG,GAAG,wBAAZ;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,MAAM,GAAG,MAAM;AACnB,WAAOC,QAAQ,CAACC,GAAhB;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,UAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CACrB,kEADqB,CAAvB;AAGA,WAAOD,QAAP;AACD,GAND;;AAOA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AACAE,IAAAA,cADA;AAEAC,IAAAA,wBAFA;AAGAC,IAAAA,WAHA;AAIAC,IAAAA;AAJA,GAAD,KAMC,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,eADT;AAEE,IAAA,eAAe,EAAE;AAAEC,MAAAA,CAAC,EAAEJ,cAAc,CAACI,CAApB;AAAuBC,MAAAA,CAAC,EAAEL,cAAc,CAACK;AAAzC,KAFnB;AAGE,IAAA,QAAQ,EACNJ,wBAAwB,GACpB;AAAEG,MAAAA,CAAC,EAAEJ,cAAc,CAACI,CAApB;AAAuBC,MAAAA,CAAC,EAAEL,cAAc,CAACK;AAAzC,KADoB,GAEpB,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEN;AADN,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD;AAAG,IAAA,KAAK,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,WAAL,CADF,EAGE;AACE,IAAA,OAAO,EAAE,MAAM;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,EAAlB,EADa,CAGb;AACD,KALH;AAME,IAAA,SAAS,EAAC,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CANF,CADF,CADF,CAPF,CATF,CAPJ,CADF;AAsDD,CAtGD;;AAwGA,eAAeD,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { X } from \"react-feather\";\nimport Draggable from \"react-draggable\";\nimport { ModalContext } from \"../Contexts/ModalProvider\";\nconst api = \"http://127.0.0.1:5000/\";\n\nconst Modal = () => {\n  //   //this will be used to return from the backend the dictionary of image->date pairs\n  //   const [imagePairs, search]\n\n  // // Unique ID for the className.\n  // var MOUSE_VISITED_CLASSNAME = \"crx_mouse_visited\";\n\n  // // Previous dom, that we want to track, so we can remove the previous styling.\n  // var prevDOM = null;\n\n  // // Mouse listener for any move event on the current document.\n  // document.addEventListener(\n  //   \"mousemove\",\n  //   function (e) {\n  //     let srcElement = e.srcElement;\n\n  //     // Lets check if our underlying element is a IMG.\n  //     if (prevDOM != srcElement && srcElement.nodeName == \"IMG\") {\n  //       // For NPE checking, we check safely. We need to remove the class name\n  //       // Since we will be styling the new one after.\n  //       if (prevDOM != null) {\n  //         prevDOM.classList.remove(MOUSE_VISITED_CLASSNAME);\n  //       }\n\n  //       // Add a visited class name to the element. So we can style it.\n  //       srcElement.classList.add(MOUSE_VISITED_CLASSNAME);\n\n  //       // The current element is now the previous. So we can remove the class\n  //       // during the next ieration.\n  //       prevDOM = srcElement;\n  //       console.info(srcElement.currentSrc);\n  //       console.dir(srcElement);\n  //     }\n  //   },\n  //   false\n  // );\n\n  const getURL = () => {\n    return document.URL;\n  };\n\n  const callScript = async () => {\n    const url = getURL();\n    const response = await axios.get(\n      \"http://127.0.0.1:5000/geturl/?page=Paper_Mario:_The_Origami_King\"\n    );\n    return response;\n  };\n  return (\n    <ModalContext.Consumer>\n      {({\n        windowPosition,\n        hasDraggedWindowPosition,\n        extensionId,\n        getExtensionId,\n      }) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{ x: windowPosition.x, y: windowPosition.y }}\n          position={\n            hasDraggedWindowPosition\n              ? { x: windowPosition.x, y: windowPosition.y }\n              : null\n          }\n        >\n          <div\n            id=\"modal\"\n            className=\"modal-window\"\n            style={{\n              transform: windowPosition,\n            }}\n          >\n            <div className=\"modal-window-inner-border\">\n              <>\n                <div className=\"modal-body\">\n                  <div className=\"modal-handle\">\n                    <div className=\"modal-close-button\">\n                      <X color=\"#5d6484\" size=\"14\" />\n                    </div>\n                  </div>\n                  <div className=\"modal-content\">\n                    <h3>{extensionId}</h3>\n\n                    <button\n                      onClick={() => {\n                        console.log(getURL());\n\n                        //console.log(callScript());\n                      }}\n                      className=\"modal-button\"\n                    >\n                      RUN MINUTE MAN?\n                    </button>\n                  </div>\n                </div>\n              </>\n            </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}